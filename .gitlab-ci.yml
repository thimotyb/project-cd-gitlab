# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
  - build
  - test
  - publish
sast:
  stage: test

build_app:
  stage: build
  script:
    - mkdir my_app
    - mkdir release
    - touch my_app/my_app
    - echo "hello this is my code" >> my_app/my_app
    - tar -czvf release/my_app.tar.gz my_app/.
  artifacts:
    paths:
      - release/my_app.tar.gz
publish_to_registry:
  stage: publish
  script:
    - ls 
    - pwd
    - cd release
    - ls
    - ls | grep *.tar.gz
    - $PACKAGE_FILE=my_app.tar.gz
    - echo $PACKAGE_FILE
    - curl --user "test:gldt-gAByff85d_Nju8mPcLvt" --upload-file my_app.tar.gz "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/stable_releases/0.0.1/$PACKAGE_FILE"
  dependencies:
    - build_app
include:
- template: Security/SAST.gitlab-ci.yml
